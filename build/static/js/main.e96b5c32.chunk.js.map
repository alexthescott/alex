{"version":3,"sources":["static/imgs/alex_0.JPG","static/icons/github-icon.svg","static/icons/linkedin-icon.svg","static/icons/email-icon.svg","static/icons/spotify-icon.svg","App.js","reportWebVitals.js","index.js"],"names":["openNewTab","url","console","log","window","open","focus","App","className","Grid","container","direction","justify","spacing","height","xs","style","item","id","src","alex_photo","alt","Typography","variant","strings","typeSpeed","showCursor","class","github_icon","onClick","linkedin_icon","email_icon","spotify_icon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAAe,G,YAAA,IAA0B,oCCA1B,MAA0B,wCCA1B,MAA0B,0CCA1B,MAA0B,uCCA1B,MAA0B,yC,wCC4FzC,SAASA,EAAWC,GAClBC,QAAQC,IAAI,WAAYF,EAAK,gBACnBG,OAAOC,KAAKJ,GAClBK,QAGSC,MA/Bf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CACAC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,QAAQ,IACRC,OAAO,OALP,UAxDF,eAACL,EAAA,EAAD,CAAMC,WAAS,EAACK,GAAG,IAAIH,QAAQ,aAAaD,UAAU,SAASK,MAAO,CAAC,SAAW,SAAlF,UACE,eAACP,EAAA,EAAD,CAAMQ,MAAI,EAACJ,QAAS,EAApB,UACE,qBAAKK,GAAG,iBAAiBC,IAAKC,EAAYC,IAAI,+BAC9C,cAACC,EAAA,EAAD,CACEC,QAAQ,KACRL,GAAG,kBAFL,SAGI,cAAC,IAAD,CACAM,QAAS,CAAC,qBACVC,UAAW,GACXC,YAAY,EACZV,MAAO,CAAC,MAAQ,QAAS,OAAS,eAIxC,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAACJ,QAAS,EAApB,SACE,cAACS,EAAA,EAAD,CACEJ,GAAG,eACHK,QAAQ,YAFV,4BAMF,cAACd,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,sBAAKU,MAAM,qBAAX,UACI,qBACEA,MAAM,YACNR,IAAKS,EACLP,IAAI,cACJQ,QAAS,kBAAM7B,EAAW,sCAE5B,qBACE2B,MAAM,YACNR,IAAKW,EACLT,IAAI,gBACJQ,QAAS,kBAAM7B,EAAW,wDAE5B,qBACE2B,MAAM,YACNR,IAAKY,EACLV,IAAI,aACJQ,QAAS,kBAAM7B,EAAW,8BAE5B,qBACE2B,MAAM,YACNR,IAAKa,EACLX,IAAI,eACJQ,QAAS,kBAAM7B,EAAW,2DAmBlC,cAACS,EAAA,EAAD,CAAMQ,MAAI,EAACF,GAAG,IAAd,SACE,qBAAKC,MAAO,CAAC,YAAa,SAAU,cAAc,OAAQ,eAAe,QAAzE,SACE,mBAAGE,GAAG,cAAN,2XCpEKe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e96b5c32.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alex_0.806e3028.JPG\";","export default __webpack_public_path__ + \"static/media/github-icon.3200bb12.svg\";","export default __webpack_public_path__ + \"static/media/linkedin-icon.64e4e7e5.svg\";","export default __webpack_public_path__ + \"static/media/email-icon.a15fd363.svg\";","export default __webpack_public_path__ + \"static/media/spotify-icon.9b95e99b.svg\";","import './App.css';\nimport React from 'react'\n\nimport alex_photo from './static/imgs/alex_0.JPG';\nimport github_icon from './static/icons/github-icon.svg';\nimport linkedin_icon from './static/icons/linkedin-icon.svg';\nimport email_icon from './static/icons/email-icon.svg';\nimport spotify_icon from './static/icons/spotify-icon.svg';\n\nimport {Typography, Grid, Container} from '@material-ui/core';\nimport Typed from 'react-typed';\n\nfunction draw_my_info(){\n  return(\n    <Grid container xs=\"3\" justify=\"flex-start\" direction=\"column\" style={{'maxWidth':'225px'}}>\n      <Grid item spacing={2}>\n        <img id=\"alex_head_shot\" src={alex_photo} alt=\"Alex holding his cat Blake\"></img>\n        <Typography\n          variant='h5'\n          id=\"me_page_my_name\">\n            <Typed \n            strings={[\"<b>Alex Scott</b>\"]} \n            typeSpeed={35}\n            showCursor={false}\n            style={{'color':'white', 'weight':'bold'}}\n            ></Typed>\n        </Typography>\n      </Grid>\n      <Grid item spacing={2}>\n        <Typography\n          id=\"me_page_city\"\n          variant='subtitle1'>\n            Carlsbad, CA\n        </Typography>\n      </Grid>\n      <Grid item>\n        <div class=\"me_page_icon_links\">\n            <img \n              class=\"page_icon\" \n              src={github_icon} \n              alt=\"github icon\"\n              onClick={() => openNewTab(\"https://github.com/alexthescott\")}>\n            </img>\n            <img \n              class=\"page_icon\" \n              src={linkedin_icon} \n              alt=\"linkedin icon\"\n              onClick={() => openNewTab(\"https://www.linkedin.com/in/alex-scott-b1a591152/\")}>\n            </img>\n            <img \n              class=\"page_icon\"\n              src={email_icon}\n              alt=\"email icon\"\n              onClick={() => openNewTab(\"mailto:atscott@ucsc.edu\")}>\n            </img>\n            <img \n              class=\"page_icon\"\n              src={spotify_icon}\n              alt=\"spotify icon\"\n              onClick={() => openNewTab(\"https://open.spotify.com/user/bassguitar1234\")}>\n            </img>\n          </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n      <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      spacing=\"0\"\n      height=\"100%\"\n      >\n      {draw_my_info()}\n      <Grid item xs=\"9\">\n        <div style={{'max-width': '1000px', 'margin-left':'auto', 'margin-right':'auto'}}>\n          <p id=\"me_page_bio\">\n            Howdy üëãüèª! My name is Alex, and I am a programmer, music enthusiast and runner. In 2020, I graduated from UCSC\n            with a BS in Computer Science. I currently work for iDTech as an online private instructor, and am looking to start\n            my professional programming career. My long term interests lie in the intersection of music and technology.\n          </p>\n        </div>\n      </Grid>\n    </Grid>\n    </div>\n  );\n}\n\nfunction openNewTab(url){\n  console.log(\"opening \", url, \"in a new tab\");\n  var win = window.open(url);\n  win.focus();\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}