{"version":3,"sources":["static/icons/github-icon.svg","static/icons/linkedin-icon.svg","static/icons/email-icon.svg","static/icons/spotify-icon.svg","components/footer.js","sketches/tiny_noise.js","sketches/pond_water.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","footer","padding","spacing","marginTop","backgroundColor","StickyFooter","classes","className","Container","maxWidth","class","src","github_icon","alt","onClick","openNewTab","linkedin_icon","spotify_icon","email_icon","url","console","log","window","open","focus","sketch","p","slant","palettes","palette","Math","floor","random","length","time","setup","createCanvas","noiseDetail","noStroke","map","draw","background","x_grid","width","y_grid","height","x","y","x_off","y_off","x_cir","cos","y_cir","sin","c","noise","fill","square","radians","bg","ripple_color","colors","avoid_pos","ripples","i","push","ripple","noFill","stroke","strokeWeight","rect","pos","this","speed","max_size","sqrt","spawn_rate","ripple_gap","frameCount","shift","circle","root","display","flexDirection","minHeight","main","getSketch","sketch_index","round","Grid","item","xs","tiny_noise","pond_water","App","CssBaseline","component","Typography","variant","id","strings","typeSpeed","showCursor","backDelay","backSpeed","smartBackspace","loop","loopCount","style","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8559ecb6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-icon.ff5b408c.svg\";","export default __webpack_public_path__ + \"static/media/linkedin-icon.e3403041.svg\";","export default __webpack_public_path__ + \"static/media/email-icon.23386db3.svg\";","export default __webpack_public_path__ + \"static/media/spotify-icon.261509b7.svg\";","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { minHeight } from '@material-ui/system'\n\nimport github_icon from '../static/icons/github-icon.svg';\nimport linkedin_icon from '../static/icons/linkedin-icon.svg';\nimport email_icon from '../static/icons/email-icon.svg';\nimport spotify_icon from '../static/icons/spotify-icon.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    backgroundColor: '#15283d'\n  },\n}));\n\nexport default function StickyFooter() {\n  const classes = useStyles()\n\n  return(\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <div>\n          <img \n            class=\"page_icon\" \n            src={github_icon} \n            alt=\"github icon\"\n            onClick={() => openNewTab(\"https://github.com/alexthescott\")}>\n          </img>\n          <img \n            class=\"page_icon\" \n            src={linkedin_icon} \n            alt=\"linkedin icon\"\n            onClick={() => openNewTab(\"https://www.linkedin.com/in/alex-scott-b1a591152/\")}>\n          </img>\n          <img \n            class=\"page_icon\"\n            src={spotify_icon}\n            alt=\"spotify icon\"\n            onClick={() => openNewTab(\"https://open.spotify.com/user/bassguitar1234\")}>\n          </img>\n          <img \n            class=\"page_icon\"\n            src={email_icon}\n            alt=\"email icon\"\n            onClick={() => openNewTab(\"mailto:atscott@ucsc.edu\")}>\n          </img>\n          </div>\n        </Container>\n      </footer>\n  )\n}\n\nfunction openNewTab(url){\n  console.log(\"opening \", url, \"in a new tab\");\n  var win = window.open(url);\n  win.focus();\n}","// tiny noise\n// Alex Scott, 2020\n// -> ... cell_size / (width || height) must be an int\n\nexport default function sketch(p){\n\n  var palettes = [['#273043', '#F02D3A', '#EFF6EE'],\n  ['#1E2019', '#E2C044', '#587B7F'],\n  ['#15A0A2', '#4A8FE7', '#44E5E7'],\n  ['#5C95FF', '#B9E6FF', '#F87575'],\n  ['#2C302E', '#474A48', '#909590'],\n  ['#243010', '#829E2E', '#AFCC66']];\n\n  // pick one of 6 palettes\n  var palette_choice = Math.floor(Math.random() * palettes.length);\n  var palette = palettes[palette_choice];\n\n  var cell_size = 4;\n  var noise_const = 0.05;\n  var time = 0;\n  var time_vel = 0.5;\n  var time_frailty = 3; // how much should time move noise?\n  var slant;\n\n  var canvas;\n  \n  p.setup = () => {\n    canvas = p.createCanvas(400, 400);\n    p.noiseDetail(3);\n    p.noStroke();\n    slant = p.map(p.random(0, 1), 0, 1, -1.5, 1.5);\n    slant == 0 ? slant = 1 : slant = slant;\n  }\n\n  p.draw = () => {\n    p.background(palette[0]);\n    let x_grid = p.width / cell_size;\n    let y_grid = p.height / cell_size;\n  \n    for (let x = 0; x < x_grid; x++) {\n      for (let y = 0; y < y_grid; y++) {\n        var x_off = x * noise_const / slant;\n        var y_off = y * noise_const * slant;\n  \n        var x_cir = p.cos(time);\n        var y_cir = p.sin(time);\n        var c = p.noise(x_off, y_off, x_cir + y_cir);\n  \n        if (c >= 0.55) {\n          p.fill(palette[1]);\n          p.square(x * cell_size, y * cell_size, cell_size);\n        } else if (c > 0.455) {\n          p.fill(palette[2]);\n          p.square(x * cell_size, y * cell_size, cell_size);\n        }\n      }\n    }\n    time += p.radians(time_vel);\n  }\n\n}","// https://dribbble.com/shots/3450541-Ripples\n\n\nexport default function sketch(p){\n  var colors = [[\"#E63946\", \"#4CC9F0\"],\n  [\"#023047\", \"#FFB703\"],\n  [\"#081c15\", \"#52b788\"],\n  [\"#deaaff\", \"#c0fdff\"],\n  [\"#fb5607\", \"#ff006e\"],\n  [\"#355070\", \"#b56576\"]];\n\n  // pick one of 6 colors\n  var palette_choice = Math.floor(Math.random() * colors.length);\n  var palette = colors[palette_choice];\n\n  // decide if ripple color and bg color should be flipped\n  var bg_flip = Math.floor(Math.random() * 2);\n  var bg;\n  var ripple_color;\n\n  if(bg_flip == 0){;\n  bg = palette[0];\n  ripple_color = palette[1];\n  } else{\n  bg = palette[1];\n  ripple_color = palette[0];\n  }\n\n  // 3 ripples, avoid one corner\n  var avoid_pos = Math.floor(Math.random() * 4);\n  var ripples = [];\n\n  var canvas;\n\n  p.setup = () => {\n    canvas = p.createCanvas(400, 400);\n    for(var i = 0; i < 4; i++){\n      if (i != avoid_pos){\n        ripples.push(new ripple(i));\n      }\n    }\n    p.noFill();\n  }\n\n  p.draw = () => {\n    p.background(bg);\n    p.stroke(ripple_color);\n    // framed rectangle around the canvas\n    p.strokeWeight(12);\n    p.rect(0, 0, p.width, p.height);\n    // draw all ripples\n    p.strokeWeight(5);\n    for(var i = 0; i < ripples.length; i++){\n      var ripple = ripples[i];\n      ripple.draw();\n    }\n  }\n\n  class ripple {\n    constructor(pos){\n      this.ripples = [];\n      this.speed = 0.25;\n      this.max_size = 2.25 * Math.sqrt((p.width * p.width) + (p.height * p.height));\n      this.spawn_rate = 4; // measured in seconds\n\n      var ripple_gap = this.speed * this.spawn_rate * 60;\n      var num_of_ripples = 1 + this.max_size / ripple_gap;\n\n      // prepopulate the ripples \n      for (var i = num_of_ripples; i > 0; i--){\n        this.ripples.push(i*ripple_gap);\n      }\n\n      // decide corner \n      if (pos == 0){\n        this.x = -p.width/10;\n        this.y = -p.height/10;\n      } else if (pos == 1){\n        this.x = p.width + p.width/10;\n        this.y = -p.height/10;\n      } else if (pos == 2){\n        this.x = -p.width/10;\n        this.y = p.height + p.height/10;\n      } else{\n        this.x = p.width + p.width/10;\n        this.y = p.height + p.height/10;\n      }\n    }\n\n    draw(){\n      // spawn new ripples at a regular frequency\n      if (p.frameCount % (this.spawn_rate * 60) == 0){\n        this.ripples.push(0);\n      }\n\n      for(var i = 0; i < this.ripples.length; i++){\n        // pop from list if ripple can't be seen\n        if (this.ripples[i] >= this.max_size){\n          this.ripples.shift();\n        }  \n\n        // draw and grow ripple\n        p.circle(this.x, this.y, this.ripples[i]);\n        this.ripples[i] += this.speed;\n      }\n    }\n  }\n}\n\n","import './App.css';\nimport React, { Component } from 'react'\nimport Typed from 'react-typed';\nimport {Typography, Grid, CssBaseline, Container} from '@material-ui/core';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\n\nimport StickyFooter from './components/footer'\n\nimport P5Wrapper from 'react-p5-wrapper'\nimport tiny_noise from '../src/sketches/tiny_noise.js'\nimport pond_water from '../src/sketches/pond_water.js'\n\n// TODO -> Address mobile sized version of this site, putting the side_nav bar @ the top\n\nconst useStyles = makeStyles((theme) => ({\n  root: { \n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    backgroundColor: '#1b3756',\n  },\n  main: {\n    padding: theme.spacing(2)\n  },\n}));\n\nfunction getSketch(){\n  const sketch_index = Math.round(Math.random(0, 1) * 1)\n  console.log(sketch_index)\n\n  if (sketch_index === 0){\n    return (<Grid item xs={12}><P5Wrapper sketch={tiny_noise}></P5Wrapper></Grid>)\n  } else{\n    return <Grid item xs={12}><P5Wrapper sketch={pond_water}></P5Wrapper></Grid>\n  }\n}\n\nexport default function App() {\n  const classes = useStyles()\n\n\n  return (\n    <div className={classes.root}> \n      <CssBaseline/>\n        <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n          <Typography\n            variant='h6'\n            id=\"me_page_my_name\">\n              <Typed \n              strings={[\n                \"<b>Alex Scott,</b> UCSC Grad\", \n                \"<b>Alex Scott, </b> Programmer\",\n                \"<b>Alex Scott, </b> Music Nerd\",\n                \"<b>Alex Scott, </b> Runner\",\n                \"<b>Alex Scott </b>\"\n              ]} \n              typeSpeed={75}\n              showCursor={true}\n              backDelay={1000}\n              backSpeed={60}\n              smartBackspace={true}\n              loop={true}\n              loopCount={3}\n              style={{'color':'white', 'weight':'bold'}}\n              ></Typed>\n          </Typography>\n        </Container>\n        <Container maxWidth=\"sm\">\n          <Grid container>\n            {getSketch()}\n            <Grid item xs={12}>\n              {/* \n            <p id=\"me_page_bio\">\n            👋🏻 Howdy! I am a programmer, music enthusiast \n            and runner, and in 2020, I graduated from UCSC with a BS in Computer \n            Science. I currently work for iDTech as an online private instructor,\n            and am excited to start my professional programming career. \n            </p>\n            */}\n          </Grid>\n          </Grid>\n          {/*           <p id=\"me_page_bio\">\n            👋🏻 Howdy! I am a programmer, music enthusiast \n            and runner, and in 2020, I graduated from UCSC with a BS in Computer \n            Science. I currently work for iDTech as an online private instructor,\n            and am excited to start my professional programming career. \n          </p>\n          */}\n\n        </Container>\n      <StickyFooter/>\n    </div>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}